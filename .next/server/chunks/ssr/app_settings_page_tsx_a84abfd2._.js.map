{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/nitishkumar/Desktop/project/app/settings/page.tsx"],"sourcesContent":["\"use client\"\n// pages/settings.tsx\nimport type React from \"react\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Moon, Sun, User, Bell, Lock, Palette, Layers } from \"lucide-react\"\n\n// Define types for our settings\ninterface UserSettings {\n  displayName: string\n  email: string\n  bio: string\n  profilePicture: string\n  notificationPreferences: {\n    emailNotifications: boolean\n    pushNotifications: boolean\n    newsletterSubscription: boolean\n    commentReplies: boolean\n    newFollowers: boolean\n  }\n  privacySettings: {\n    profileVisibility: \"public\" | \"private\" | \"followers\"\n    showEmail: boolean\n    allowComments: boolean\n    allowSharing: boolean\n  }\n  appearanceSettings: {\n    theme: \"light\" | \"dark\" | \"system\"\n    fontSize: \"small\" | \"medium\" | \"large\"\n    compactView: boolean\n  }\n  contentPreferences: {\n    categories: string[]\n    language: string\n  }\n}\n\n// Mock data for available categories and languages\nconst availableCategories = [\n  \"Technology\",\n  \"Travel\",\n  \"Food\",\n  \"Fashion\",\n  \"Health\",\n  \"Fitness\",\n  \"Business\",\n  \"Finance\",\n  \"Art\",\n  \"Science\",\n]\n\nconst availableLanguages = [\n  { code: \"en\", name: \"English\" },\n  { code: \"es\", name: \"Spanish\" },\n  { code: \"fr\", name: \"French\" },\n  { code: \"de\", name: \"German\" },\n  { code: \"ja\", name: \"Japanese\" },\n  { code: \"zh\", name: \"Chinese\" },\n]\n\nexport default function Settings() {\n  const router = useRouter()\n  const [activeTab, setActiveTab] = useState(\"profile\")\n  const [isSaving, setIsSaving] = useState(false)\n  const [saveMessage, setSaveMessage] = useState(\"\")\n  const [imagePreview, setImagePreview] = useState<string | null>(null)\n  const [theme, setTheme] = useState<\"light\" | \"dark\" | \"system\">(\"system\")\n\n  // Initialize with default settings\n  const [settings, setSettings] = useState<UserSettings>({\n    displayName: \"John Doe\",\n    email: \"johndoe@example.com\",\n    bio: \"I love writing about technology and travel.\",\n    profilePicture: \"/default-avatar.png\",\n    notificationPreferences: {\n      emailNotifications: true,\n      pushNotifications: true,\n      newsletterSubscription: true,\n      commentReplies: true,\n      newFollowers: true,\n    },\n    privacySettings: {\n      profileVisibility: \"public\",\n      showEmail: false,\n      allowComments: true,\n      allowSharing: true,\n    },\n    appearanceSettings: {\n      theme: \"system\",\n      fontSize: \"medium\",\n      compactView: false,\n    },\n    contentPreferences: {\n      categories: [\"Technology\", \"Travel\"],\n      language: \"en\",\n    },\n  })\n\n  // Effect to update theme when settings change\n  useEffect(() => {\n    setTheme(settings.appearanceSettings.theme)\n\n    // Apply theme to document\n    if (settings.appearanceSettings.theme === \"dark\") {\n      document.documentElement.classList.add(\"dark\")\n    } else if (settings.appearanceSettings.theme === \"light\") {\n      document.documentElement.classList.remove(\"dark\")\n    } else {\n      // System preference\n      if (window.matchMedia && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        document.documentElement.classList.add(\"dark\")\n      } else {\n        document.documentElement.classList.remove(\"dark\")\n      }\n    }\n  }, [settings.appearanceSettings.theme])\n\n  // Handle input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n    const { name, value } = e.target\n    setSettings({\n      ...settings,\n      [name]: value,\n    })\n  }\n\n  // Handle checkbox changes\n  const handleCheckboxChange = (section: string, setting: string) => {\n    setSettings({\n      ...settings,\n      [section]: {\n        ...settings[section as keyof UserSettings],\n        [setting]: !(settings[section as keyof UserSettings] as any)[setting],\n      },\n    })\n  }\n\n  // Handle nested select changes\n  const handleSelectChange = (section: string, setting: string, value: any) => {\n    setSettings({\n      ...settings,\n      [section]: {\n        ...settings[section as keyof UserSettings],\n        [setting]: value,\n      },\n    })\n  }\n\n  // Handle category selection\n  const handleCategoryToggle = (category: string) => {\n    const currentCategories = settings.contentPreferences.categories\n    let newCategories\n\n    if (currentCategories.includes(category)) {\n      newCategories = currentCategories.filter((c) => c !== category)\n    } else {\n      newCategories = [...currentCategories, category]\n    }\n\n    setSettings({\n      ...settings,\n      contentPreferences: {\n        ...settings.contentPreferences,\n        categories: newCategories,\n      },\n    })\n  }\n\n  // Handle file upload for profile picture\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0]\n    if (file) {\n      const reader = new FileReader()\n      reader.onloadend = () => {\n        setImagePreview(reader.result as string)\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  // Save settings\n  const saveSettings = async () => {\n    setIsSaving(true)\n    // Simulate API call\n    try {\n      await new Promise((resolve) => setTimeout(resolve, 1000))\n      if (imagePreview) {\n        setSettings({\n          ...settings,\n          profilePicture: imagePreview,\n        })\n      }\n      setSaveMessage(\"Settings saved successfully!\")\n      setTimeout(() => setSaveMessage(\"\"), 3000)\n    } catch (error) {\n      setSaveMessage(\"Error saving settings. Please try again.\")\n    } finally {\n      setIsSaving(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-[#1A1A1A] text-gray-900 dark:text-gray-100 transition-colors duration-200\">\n      {/* Settings content */}\n      <div className=\"max-w-7xl mx-auto py-10 px-4 sm:px-6 lg:px-8\">\n        <div className=\"md:grid md:grid-cols-3 md:gap-6\">\n          <div className=\"md:col-span-1\">\n            <div className=\"px-4 sm:px-0\">\n              <h2 className=\"text-2xl font-bold leading-7 text-gray-900 dark:text-white\">Settings</h2>\n              <p className=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n                Manage your account settings and preferences.\n              </p>\n\n              {/* Settings navigation */}\n              <nav className=\"mt-8 space-y-2\" aria-label=\"Settings\">\n                <button\n                  onClick={() => setActiveTab(\"profile\")}\n                  className={`${\n                    activeTab === \"profile\"\n                      ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                      : \"border-transparent text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-gray-200\"\n                  } flex items-center px-4 py-3 text-sm font-medium border-l-4 w-full text-left rounded-r-md transition-all duration-200`}\n                >\n                  <User className=\"mr-3 h-5 w-5\" />\n                  Profile\n                </button>\n\n                <button\n                  onClick={() => setActiveTab(\"notifications\")}\n                  className={`${\n                    activeTab === \"notifications\"\n                      ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                      : \"border-transparent text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-gray-200\"\n                  } flex items-center px-4 py-3 text-sm font-medium border-l-4 w-full text-left rounded-r-md transition-all duration-200`}\n                >\n                  <Bell className=\"mr-3 h-5 w-5\" />\n                  Notifications\n                </button>\n\n                <button\n                  onClick={() => setActiveTab(\"privacy\")}\n                  className={`${\n                    activeTab === \"privacy\"\n                      ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                      : \"border-transparent text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-gray-200\"\n                  } flex items-center px-4 py-3 text-sm font-medium border-l-4 w-full text-left rounded-r-md transition-all duration-200`}\n                >\n                  <Lock className=\"mr-3 h-5 w-5\" />\n                  Privacy & Security\n                </button>\n\n                <button\n                  onClick={() => setActiveTab(\"appearance\")}\n                  className={`${\n                    activeTab === \"appearance\"\n                      ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                      : \"border-transparent text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-gray-200\"\n                  } flex items-center px-4 py-3 text-sm font-medium border-l-4 w-full text-left rounded-r-md transition-all duration-200`}\n                >\n                  <Palette className=\"mr-3 h-5 w-5\" />\n                  Appearance\n                </button>\n\n                <button\n                  onClick={() => setActiveTab(\"content\")}\n                  className={`${\n                    activeTab === \"content\"\n                      ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                      : \"border-transparent text-gray-600 dark:text-gray-400 hover:bg-gray-50 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-gray-200\"\n                  } flex items-center px-4 py-3 text-sm font-medium border-l-4 w-full text-left rounded-r-md transition-all duration-200`}\n                >\n                  <Layers className=\"mr-3 h-5 w-5\" />\n                  Content Preferences\n                </button>\n              </nav>\n            </div>\n          </div>\n\n          <div className=\"mt-8 md:mt-0 md:col-span-2\">\n            <div className=\"shadow overflow-hidden sm:rounded-lg\">\n              <div className=\"px-6 py-6 bg-white dark:bg-[#0a0a0a] sm:p-6 rounded-xl\">\n                {/* Profile Settings */}\n                {activeTab === \"profile\" && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold leading-6 text-gray-900 dark:text-white\">\n                      Profile Information\n                    </h3>\n                    <div className=\"grid grid-cols-6 gap-6\">\n                      <div className=\"col-span-6 sm:col-span-4\">\n                        <label\n                          htmlFor=\"displayName\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Display Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          name=\"displayName\"\n                          id=\"displayName\"\n                          value={settings.displayName}\n                          onChange={handleInputChange}\n                          className=\"px-4 py-2.5 mt-1 focus:ring-[#00e5FF] focus:border-[#00e5FF] block w-full shadow-sm sm:text-sm border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                        />\n                      </div>\n\n                      <div className=\"col-span-6 sm:col-span-4\">\n                        <label\n                          htmlFor=\"email\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Email Address\n                        </label>\n                        <input\n                          type=\"email\"\n                          name=\"email\"\n                          id=\"email\"\n                          value={settings.email}\n                          onChange={handleInputChange}\n                          className=\"px-4 py-2.5 mt-1 focus:ring-[#00e5FF] focus:border-[#00e5FF] block w-full shadow-sm sm:text-sm border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                        />\n                      </div>\n\n                      <div className=\"col-span-6\">\n                        <label\n                          htmlFor=\"bio\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Bio\n                        </label>\n                        <textarea\n                          id=\"bio\"\n                          name=\"bio\"\n                          rows={3}\n                          value={settings.bio}\n                          onChange={handleInputChange}\n                          className=\"px-4 py-2.5 mt-1 focus:ring-[#00e5FF] focus:border-[#00e5FF] block w-full shadow-sm sm:text-sm border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\n                        />\n                        <p className=\"mt-2 text-sm text-gray-500 dark:text-gray-400\">\n                          Brief description for your profile. URLs are hyperlinked.\n                        </p>\n                      </div>\n\n                      <div className=\"col-span-6\">\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                          Profile Picture\n                        </label>\n                        <div className=\"mt-2 flex items-center space-x-5\">\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"relative h-20 w-20 rounded-full overflow-hidden bg-gray-100 dark:bg-gray-700 border-2 border-white dark:border-gray-600 shadow-sm\">\n                              {imagePreview ? (\n                                // eslint-disable-next-line @next/next/no-img-element\n                                <img\n                                  src={imagePreview || \"/placeholder.svg\"}\n                                  alt=\"Profile preview\"\n                                  className=\"h-full w-full object-cover\"\n                                />\n                              ) : (\n                                <div className=\"h-full w-full flex items-center justify-center text-[#00e5FF] dark:text-[#00e5FF] text-xl font-bold\">\n                                  {settings.displayName.charAt(0)}\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex text-sm text-gray-600 dark:text-gray-400\">\n                            <label\n                              htmlFor=\"profile-photo\"\n                              className=\"relative cursor-pointer bg-white dark:bg-gray-700 rounded-md font-medium text-[#00e5FF] dark:text-[#00e5FF] hover:text-[#00e5FF]/80 dark:hover:text-[#00e5FF]/80 focus-within:outline-none px-4 py-2 border border-gray-300 dark:border-gray-600 shadow-sm transition-colors\"\n                            >\n                              <span>Change</span>\n                              <input\n                                id=\"profile-photo\"\n                                name=\"profile-photo\"\n                                type=\"file\"\n                                className=\"sr-only\"\n                                accept=\"image/*\"\n                                onChange={handleFileChange}\n                              />\n                            </label>\n                            <p className=\"pl-3 self-center\">or drag and drop</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Notification Settings */}\n                {activeTab === \"notifications\" && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold leading-6 text-gray-900 dark:text-white\">\n                      Notification Preferences\n                    </h3>\n                    <div className=\"space-y-5\">\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"emailNotifications\"\n                            name=\"emailNotifications\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.emailNotifications}\n                            onChange={() => handleCheckboxChange(\"notificationPreferences\", \"emailNotifications\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"emailNotifications\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Email Notifications\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Receive email notifications for important updates.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"pushNotifications\"\n                            name=\"pushNotifications\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.pushNotifications}\n                            onChange={() => handleCheckboxChange(\"notificationPreferences\", \"pushNotifications\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"pushNotifications\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Push Notifications\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">Allow browser push notifications.</p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"newsletterSubscription\"\n                            name=\"newsletterSubscription\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.newsletterSubscription}\n                            onChange={() => handleCheckboxChange(\"notificationPreferences\", \"newsletterSubscription\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label\n                            htmlFor=\"newsletterSubscription\"\n                            className=\"font-medium text-gray-700 dark:text-gray-300\"\n                          >\n                            Newsletter Subscription\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Receive our weekly newsletter with the best content.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"commentReplies\"\n                            name=\"commentReplies\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.commentReplies}\n                            onChange={() => handleCheckboxChange(\"notificationPreferences\", \"commentReplies\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"commentReplies\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Comment Replies\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Get notified when someone replies to your comments.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"newFollowers\"\n                            name=\"newFollowers\"\n                            type=\"checkbox\"\n                            checked={settings.notificationPreferences.newFollowers}\n                            onChange={() => handleCheckboxChange(\"notificationPreferences\", \"newFollowers\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"newFollowers\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            New Followers\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Get notified when someone follows you.\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Privacy Settings */}\n                {activeTab === \"privacy\" && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold leading-6 text-gray-900 dark:text-white\">Privacy Settings</h3>\n                    <div className=\"space-y-5\">\n                      <div>\n                        <label\n                          htmlFor=\"profileVisibility\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Profile Visibility\n                        </label>\n                        <select\n                          id=\"profileVisibility\"\n                          name=\"profileVisibility\"\n                          value={settings.privacySettings.profileVisibility}\n                          onChange={(e) => handleSelectChange(\"privacySettings\", \"profileVisibility\", e.target.value)}\n                          className=\"px-4 py-2.5 mt-1 block w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-[#00e5FF] focus:border-[#00e5FF] sm:text-sm text-gray-900 dark:text-white\"\n                        >\n                          <option value=\"public\">Public - Anyone can view your profile</option>\n                          <option value=\"private\">Private - Only you can view your profile</option>\n                          <option value=\"followers\">Followers Only - Only followers can view your profile</option>\n                        </select>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"showEmail\"\n                            name=\"showEmail\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.showEmail}\n                            onChange={() => handleCheckboxChange(\"privacySettings\", \"showEmail\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"showEmail\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Show Email\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Display your email address on your public profile.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"allowComments\"\n                            name=\"allowComments\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.allowComments}\n                            onChange={() => handleCheckboxChange(\"privacySettings\", \"allowComments\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"allowComments\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Allow Comments\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Allow others to comment on your posts.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"allowSharing\"\n                            name=\"allowSharing\"\n                            type=\"checkbox\"\n                            checked={settings.privacySettings.allowSharing}\n                            onChange={() => handleCheckboxChange(\"privacySettings\", \"allowSharing\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"allowSharing\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Allow Sharing\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Allow others to share your posts on social media.\n                          </p>\n                        </div>\n                      </div>\n\n                      <div className=\"pt-5\">\n                        <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">Security Options</h4>\n                        <div className=\"space-y-3\">\n                          <button\n                            type=\"button\"\n                            className=\"inline-flex items-center px-5 py-2.5 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#00e5FF] transition-colors\"\n                          >\n                            Change Password\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"ml-2 inline-flex items-center px-5 py-2.5 border border-gray-300 dark:border-gray-600 shadow-sm text-sm font-medium rounded-md text-gray-700 dark:text-gray-200 bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-[#00e5FF] transition-colors\"\n                          >\n                            Enable Two-Factor Authentication\n                          </button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Appearance Settings */}\n                {activeTab === \"appearance\" && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold leading-6 text-gray-900 dark:text-white\">\n                      Appearance Settings\n                    </h3>\n                    <div className=\"space-y-5\">\n                      <div>\n                        <label\n                          htmlFor=\"theme\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Theme\n                        </label>\n                        <div className=\"mt-2 grid grid-cols-3 gap-3\">\n                          <button\n                            type=\"button\"\n                            onClick={() => handleSelectChange(\"appearanceSettings\", \"theme\", \"light\")}\n                            className={`relative px-4 py-3 flex items-center justify-center text-sm font-medium uppercase rounded-md border ${\n                              settings.appearanceSettings.theme === \"light\"\n                                ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                                : \"border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-700\"\n                            } transition-colors`}\n                          >\n                            <Sun className=\"h-5 w-5 mr-2\" />\n                            Light\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleSelectChange(\"appearanceSettings\", \"theme\", \"dark\")}\n                            className={`relative px-4 py-3 flex items-center justify-center text-sm font-medium uppercase rounded-md border ${\n                              settings.appearanceSettings.theme === \"dark\"\n                                ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                                : \"border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-700\"\n                            } transition-colors`}\n                          >\n                            <Moon className=\"h-5 w-5 mr-2\" />\n                            Dark\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleSelectChange(\"appearanceSettings\", \"theme\", \"system\")}\n                            className={`relative px-4 py-3 flex items-center justify-center text-sm font-medium uppercase rounded-md border ${\n                              settings.appearanceSettings.theme === \"system\"\n                                ? \"bg-cyan-50 dark:bg-[#00e5FF]/10 border-[#00e5FF] text-[#00e5FF] dark:text-[#00e5FF]\"\n                                : \"border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 bg-white dark:bg-gray-700\"\n                            } transition-colors`}\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              className=\"h-5 w-5 mr-2\"\n                              fill=\"none\"\n                              viewBox=\"0 0 24 24\"\n                              stroke=\"currentColor\"\n                            >\n                              <path\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={2}\n                                d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\"\n                              />\n                            </svg>\n                            System\n                          </button>\n                        </div>\n                      </div>\n\n                      <div>\n                        <label\n                          htmlFor=\"fontSize\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Font Size\n                        </label>\n                        <select\n                          id=\"fontSize\"\n                          name=\"fontSize\"\n                          value={settings.appearanceSettings.fontSize}\n                          onChange={(e) => handleSelectChange(\"appearanceSettings\", \"fontSize\", e.target.value)}\n                          className=\"px-4 py-2.5 mt-1 block w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-[#00e5FF] focus:border-[#00e5FF] sm:text-sm text-gray-900 dark:text-white\"\n                        >\n                          <option value=\"small\">Small</option>\n                          <option value=\"medium\">Medium</option>\n                          <option value=\"large\">Large</option>\n                        </select>\n                      </div>\n\n                      <div className=\"flex items-start\">\n                        <div className=\"flex items-center h-5\">\n                          <input\n                            id=\"compactView\"\n                            name=\"compactView\"\n                            type=\"checkbox\"\n                            checked={settings.appearanceSettings.compactView}\n                            onChange={() => handleCheckboxChange(\"appearanceSettings\", \"compactView\")}\n                            className=\"focus:ring-[#00e5FF] h-5 w-5 text-[#00e5FF] border-gray-300 dark:border-gray-600 rounded\"\n                          />\n                        </div>\n                        <div className=\"ml-3 text-sm\">\n                          <label htmlFor=\"compactView\" className=\"font-medium text-gray-700 dark:text-gray-300\">\n                            Compact View\n                          </label>\n                          <p className=\"text-gray-500 dark:text-gray-400 mt-1\">\n                            Enable more compact layout for content lists\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                {/* Content Preferences */}\n                {activeTab === \"content\" && (\n                  <div className=\"space-y-6\">\n                    <h3 className=\"text-xl font-semibold leading-6 text-gray-900 dark:text-white\">\n                      Content Preferences\n                    </h3>\n                    <div className=\"space-y-5\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                          Preferred Categories\n                        </label>\n                        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\n                          {availableCategories.map((category) => (\n                            <button\n                              key={category}\n                              type=\"button\"\n                              onClick={() => handleCategoryToggle(category)}\n                              className={`${\n                                settings.contentPreferences.categories.includes(category)\n                                  ? \"bg-[#00e5FF] dark:bg-[#00e5FF]/90 text-white dark:text-black hover:bg-[#00e5FF]/80 dark:hover:bg-[#00e5FF]\"\n                                  : \"bg-gray-50 dark:bg-gray-700 text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-600\"\n                              } rounded-md px-4 py-2.5 text-sm font-medium transition-colors`}\n                            >\n                              {category}\n                            </button>\n                          ))}\n                        </div>\n                      </div>\n\n                      <div>\n                        <label\n                          htmlFor=\"language\"\n                          className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\"\n                        >\n                          Preferred Language\n                        </label>\n                        <select\n                          id=\"language\"\n                          name=\"language\"\n                          value={settings.contentPreferences.language}\n                          onChange={(e) => handleSelectChange(\"contentPreferences\", \"language\", e.target.value)}\n                          className=\"px-4 py-2.5 mt-1 block w-full border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700 rounded-md shadow-sm focus:outline-none focus:ring-[#00e5FF] focus:border-[#00e5FF] sm:text-sm text-gray-900 dark:text-white\"\n                        >\n                          {availableLanguages.map((lang) => (\n                            <option key={lang.code} value={lang.code}>\n                              {lang.name}\n                            </option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Save button and footer */}\n              <div className=\" mt-2 px-6 py-4 bg-gray-50 dark:bg-[#0a0a0a] sm:px-6 flex justify-between items-center rounded-xl\">\n                <div>\n                  {saveMessage && (\n                    <p\n                      className={`text-sm ${saveMessage.includes(\"success\") ? \"text-green-600 dark:text-green-400\" : \"text-red-600 dark:text-red-400\"}`}\n                    >\n                      {saveMessage}\n                    </p>\n                  )}\n                </div>\n                <button\n                  type=\"button\"\n                  onClick={saveSettings}\n                  disabled={isSaving}\n                  className=\"inline-flex justify-center py-2.5 px-5 border border-transparent shadow-sm text-sm font-medium rounded-md text-white dark:text-black bg-[#00e5FF] hover:bg-[#00e5FF]/80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus-[#00e5FF] disabled:opacity-50 transition-colors\"\n                >\n                  {isSaving ? \"Saving...\" : \"Save Changes\"}\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}